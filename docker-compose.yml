version: '3.8'

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    container_name: redis
    networks:
      - my-network

  rabbit:
    image: rabbitmq:3.13-management
    container_name: rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
        RABBITMQ_DEFAULT_USER: guest
        RABBITMQ_DEFAULT_PASS: guest
    networks:
      - my-network

  app1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app1
    restart: always
    volumes:
#      - /home/nury/projects/images:/app/images
      - /home/user/ugur/upload:/app/images
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - rabbit
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/ugur
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 841992
      SPRING_DATA_REDIS_HOST: redis
      SPRING_RABBITMQ_HOST: rabbit
      SERVER_PORT: 8080
      UPLOAD_IMAGE: /app/images
    networks:
      - my-network

  app2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app2
    volumes:
#      - /home/nury/projects/images:/app/images
      - /home/user/ugur/upload:/app/images
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - redis
      - rabbit
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/ugur_v2
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATA_REDIS_HOST: redis
      SPRING_RABBITMQ_HOST: rabbit
      SERVER_PORT: 8081
      UPLOAD_IMAGE: /app/images
    networks:
      - my-network

  nginx:
    image: nginx:latest
    container_name: "nginx"
    ports:
      - "80:80"
    working_dir: /app
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./src/main/resources/static:/app
    depends_on:
      - app1
      - app2
    networks:
      - my-network

networks:
  my-network:
    external: true